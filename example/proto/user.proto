syntax = "proto3";

package zoncoen.example;

import "proto/error.proto";
import "proto/retry.proto";
option go_package = "github.com/zoncoen/grpc-error-annotation/example/gen/example;example";

service UserService {
    option (zoncoen.api.grpc.retry) = {
        rules: {
            name: "idempotent",
            codes: [ UNAVAILABLE, DEADLINE_EXCEEDED ],
            params: { never: {} },
        }
    };

    rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
        option (zoncoen.api.grpc.error) = {
            codes: [ INVALID_ARGUMENT, ALREADY_EXISTS ],
        };
    }

    rpc GetUser(GetUserRequest) returns (GetUserResponse) {
        option (zoncoen.api.grpc.error) = {
            codes: [ INVALID_ARGUMENT ],
            retry_rule: "default",
        };
    }
}

message CreateUserRequest {
    string name = 1;
}

message CreateUserResponse {
    User user = 1;
}

message GetUserRequest {
    string user_id = 1;
}

message GetUserResponse {
    User user = 1;
}

message User {
    string user_id = 1;
    string name = 2;
}

